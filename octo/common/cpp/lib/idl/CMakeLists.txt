cmake_minimum_required(VERSION 2.6)

SET(CMAKE_CXX_FLAGS "-g -Wall -O2 -fPIC -DHAVE_NETINET_IN_H")
MESSAGE(STATUS "CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}")

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
MESSAGE(STATUS "CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}")

SET(OCTO_IDL_PATH ${CMAKE_SOURCE_DIR}/../../../idl/)
SET(COMMON_LIB_PATH ${CMAKE_SOURCE_DIR}/../)

#for output
EXECUTE_PROCESS(COMMAND mkdir ${CMAKE_SOURCE_DIR}/build)
SET(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/build)
MESSAGE(STATUS "CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}")

#default binary and lib path
EXECUTE_PROCESS(COMMAND mkdir ${CMAKE_INSTALL_PREFIX}/lib)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_INSTALL_PREFIX}/lib)
MESSAGE(STATUS "LIBRARY_OUTPUT_PATH ${LIBRARY_OUTPUT_PATH}")

EXECUTE_PROCESS(COMMAND mkdir ${CMAKE_INSTALL_PREFIX}/sgagent)
SET(INCLUDE_OUTPUT_PATH ${CMAKE_INSTALL_PREFIX}/sgagent)
MESSAGE(STATUS "INCLUDE_OUTPUT_PATH ${INCLUDE_OUTPUT_PATH}")

EXECUTE_PROCESS(COMMAND find ${CMAKE_SOURCE_DIR}/gen-cpp -name *.h -exec cp -t ${INCLUDE_OUTPUT_PATH} {} \;)

SET(BOOST_INCLUDE_DIR "/usr/include")

# find thrift libraries
FIND_PACKAGE(Thrift REQUIRED)
MESSAGE(STATUS "THRIFT_INCLUDE_DIR ${THRIFT_INCLUDE_DIR}")
MESSAGE(STATUS "THRIFTNB_STATIC_LIB ${THRIFTNB_STATIC_LIB}")
MESSAGE(STATUS "THRIFT_STATIC_LIB ${THRIFT_STATIC_LIB}")
EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-sgagent/src/main/thrift/sgagent_service.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-sgagent/src/main/thrift/sgagent_worker_service.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-common/src/main/thrift/sgagent_common.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-common/src/main/thrift/config_common.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-common/src/main/thrift/quota_common.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-common/src/main/thrift/aggregator_common.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

EXECUTE_PROCESS(COMMAND ${THRIFT_COMPILER} --gen cpp ${OCTO_IDL_PATH}/idl-common/src/main/thrift/appkey.thrift WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})

SET(THRIFT_GEN_CPP_PATH ${CMAKE_SOURCE_DIR}/gen-cpp/)
MESSAGE(STATUS "THRIFT_GEN_CPP_PATH ${THRIFT_GEN_CPP_PATH}")

INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${THRIFT_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${THRIFT_INCLUDE_DIR}/thrift)
INCLUDE_DIRECTORIES(${THRIFT_GEN_CPP_PATH})

SET(SGAGENT_THRIFT_SRCS
        ${THRIFT_GEN_CPP_PATH}/SGAgent.cpp
        ${THRIFT_GEN_CPP_PATH}/config_common_types.cpp
        ${THRIFT_GEN_CPP_PATH}/config_common_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/quota_common_types.cpp
        ${THRIFT_GEN_CPP_PATH}/quota_common_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_common_types.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_common_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_service_types.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_service_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_worker_service_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/sgagent_worker_service_types.cpp
        ${THRIFT_GEN_CPP_PATH}/aggregator_common_types.cpp
        ${THRIFT_GEN_CPP_PATH}/aggregator_common_constants.cpp
        ${THRIFT_GEN_CPP_PATH}/appkey_types.cpp
        ${THRIFT_GEN_CPP_PATH}/appkey_constants.cpp
        )

ADD_LIBRARY(octoidl SHARED ${SGAGENT_THRIFT_SRCS})
ADD_LIBRARY(octoidl-static STATIC ${SGAGENT_THRIFT_SRCS})
