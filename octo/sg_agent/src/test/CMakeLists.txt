cmake_minimum_required(VERSION 2.8)

INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${MUDUO_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${MAFKA_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${THRIFT_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${THRIFT_INCLUDE_DIR}/thrift)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${ZOOKEEPER_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${THRIFT_GEN_CPP_PATH})
INCLUDE_DIRECTORIES(${CORE_PATH})
INCLUDE_DIRECTORIES(${SGAGENT_SRC_PATH})

AUX_SOURCE_DIRECTORY(../mns MNS_SRCS)
AUX_SOURCE_DIRECTORY(../sg_agent SG_AGENT_SRCS)
AUX_SOURCE_DIRECTORY(../sgcommon SGCOMMON_SRCS)
AUX_SOURCE_DIRECTORY(../util UTIL_SRCS)
AUX_SOURCE_DIRECTORY(../../gen-cpp THRIFT_GENCPP_SRCS)
AUX_SOURCE_DIRECTORY(../remote/falcon FALCON_SRCS)
AUX_SOURCE_DIRECTORY(../remote/mafka MAFKA_SRCS)
AUX_SOURCE_DIRECTORY(../remote/monitor MONITOR_SRCS)
AUX_SOURCE_DIRECTORY(../comm COMM_SRCS)
AUX_SOURCE_DIRECTORY(. TEST_SRCS)

add_executable(unittest 
	${TEST_SRCS} 
	${MNS_SRCS} 
	${SG_AGENT_SRCS}
	${SGCOMMON_SRCS}
	${UTIL_SRCS}
	${THRIFT_GENCPP_SRCS}
	${FALCON_SRCS}
	${MAFKA_SRCS}
	${MONITOR_SRCS}
	${COMM_SRCS})
target_link_libraries(unittest -Xlinker "-(" 
	${MAFKA_LIBRARY} 
	${MUDUO_NET_LIBRARIES} 
	${ZOOKEEPER_LIBRARY} 
	${THRIFT_STATIC_LIB} 
	${CTHRIFT_LIBRARY}  
	${THRIFTNB_STATIC_LIB} 
	${THRIFT_STATIC_LIB} 
	${CURL_LIBRARY}
	${CLOG_LIBRARY}
	${SGAGENT_SRC_PATH}/test/libgtest.a log4cplus event log4cplus boost_system event uuid ssl dl pthread rt -Xlinker "-)")
