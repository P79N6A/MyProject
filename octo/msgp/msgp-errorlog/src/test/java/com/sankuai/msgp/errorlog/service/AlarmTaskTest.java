package com.sankuai.msgp.errorlog.service;

import com.sankuai.msgp.common.model.errorlog.ParsedLog;
import com.sankuai.msgp.common.utils.DateTimeUtil;
import com.sankuai.msgp.errorlog.ApplicationTest;
import com.sankuai.msgp.errorlog.domain.LogAlarmConfiguration;
import com.sankuai.msgp.errorlog.task.AlarmTask;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
public class AlarmTaskTest extends ApplicationTest {

    @Autowired
    private ErrorLogFilterService errorLogFilterService;
    @Autowired
    private LogAlarmService logAlarmService;
    @Autowired
    private LogParseService logParseService;

    @Test
    public void testAddLog() throws Exception {
        String appkey = "com.sankuai.inf.octo.errorlog.mock";
        LogAlarmConfiguration configuration = logAlarmService.getLogAlarmConfiguration(appkey);
        configuration.getBasicConfig().setEnabled(true);
        AlarmTask alarmTask = new AlarmTask(configuration, errorLogFilterService);

        String message = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"appkey\":\"com.sankuai.inf.octo.errorlog\",\"host\":\"set-gh-inf-octo-errorlog-mock01.gh.sankuai.com\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"message\":\"Error log auto-generated=by mock service. time:  %s\",\"logTime\":\"%s\",\"exception\":\" resultCode=100\",\"traceId\":\"\",\"exceptionName\":\"\"}";
        String message2 = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"appkey\":\"com.sankuai.inf.octo.errorlog\",\"host\":\"set-gh-inf-octo-errorlog-mock01.gh.sankuai.com\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"message\":\"Error log= auto-1generated by moc2k service. time:  %s\",\"logTime\":\"%s\",\"exception\":\"resultCode =100\",\"traceId\":\"\",\"exceptionName\":\"\"}";
        String message3 = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"appkey\":\"com.sankuai.inf.octo.errorlog\",\"host\":\"set-gh-inf-octo-errorlog-mock-staging01.gh.sankuai.com\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"message\":\"Error log = auto_generated by moc2k service. time:  %s\",\"logTime\":\"%s\",\"exception\":\"resultCode= 100\",\"traceId\":\"\",\"exceptionName\":\"\"}";

//        String message = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"level\":\"ERROR\",\"appkey\":\"com.sankuai.inf.msgp\",\"host\":\"set-gh-inf-octo-errorlog-mock01.gh.sankuai.com\",\"ip\":\"unknown\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"action\":null,\"message\":\"Error log auto-generated by mock service. time:  %s\",\"logTime\":\"%s\",\"exception\":\"\",\"traceId\":\"\",\"exceptionName\":\"\"}";
//        String message2 = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"level\":\"ERROR\",\"appkey\":\"com.sankuai.inf.msgp\",\"host\":\"set-gh-inf-octo-errorlog-mock01.gh.sankuai.com\",\"ip\":\"unknown\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"action\":null,\"message\":\"Error log auto-1generated by moc2k service. time:  %s\",\"logTime\":\"%s\",\"exception\":\"\",\"traceId\":\"\",\"exceptionName\":\"\"}";
//        String message3 = "{\"uniqueKey\":\"com.sankuai.inf.octo.errorlog.mock_%s_8ee5efaa-88bb-49cf-a1b1-a01f58e013ab\",\"level\":\"ERROR\",\"appkey\":\"com.sankuai.inf.msgp\",\"host\":\"set-gh-inf-octo-errorlog-mock01.gh.sankuai.com\",\"ip\":\"unknown\",\"location\":\"com.sankuai.octo.errorlog.mock.Bootstrap\",\"action\":null,\"message\":\"Error log auto_generated by moc2k service. time:  %s\",\"logTime\":\"%s\",\"exception\":\"\",\"traceId\":\"\",\"exceptionName\":\"\"}";

        for (int i = 0; i < 2000; i++) {
            String time = String.valueOf(System.currentTimeMillis());
            String message_tmp = String.format(message, time, time, time);
            String message_tmp2 = String.format(message2, time, time, time);
            String message_tmp3 = String.format(message3, time, time, time);
            String[] mess = new String[]{message_tmp,message_tmp2,message_tmp3};
//            Thread.sleep(100l);
            for(String mes:mess){
                ParsedLog record = logParseService.messageToParsedLog(mes);
                if (null != record && errorLogFilterService.handleLog(record)) {
                    alarmTask.addLog(record);
                }
            }
        }
        Thread.sleep(1000000l);
    }
}
