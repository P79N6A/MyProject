<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sankuai.msgp.errorlog.dao.ErrorLogStatisticDao">
    <resultMap id="BaseResultMap" type="com.sankuai.msgp.errorlog.pojo.ErrorLogStatistic">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <id column="time" jdbcType="INTEGER" property="time"/>
        <result column="appkey" jdbcType="VARCHAR" property="appkey"/>
        <result column="host" jdbcType="VARCHAR" property="host"/>
        <result column="filter_id" jdbcType="INTEGER" property="filterId"/>
        <result column="exception_name" jdbcType="VARCHAR" property="exceptionName"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>


    <resultMap id="hostCountMap" type="com.sankuai.msgp.errorlog.pojo.HostCount">
        <result column="host" jdbcType="VARCHAR" property="host"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>

    <resultMap id="timeCountMap" type="com.sankuai.msgp.errorlog.pojo.TimeCount">
        <result column="time" jdbcType="INTEGER" property="time"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>

    <resultMap id="appkeyCountMap" type="com.sankuai.msgp.errorlog.pojo.AppkeyCount">
        <result column="appkey" jdbcType="VARCHAR" property="appkey"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>

    <resultMap id="filterCountMap" type="com.sankuai.msgp.errorlog.pojo.FilterCount">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>

    <insert id="insert" parameterType="com.sankuai.msgp.errorlog.pojo.ErrorLogStatistic">
        insert into error_log_statistic (time, appkey, host_set, host, filter_id,exception_name, `count`, duplicate_count)
        values (#{time,jdbcType=INTEGER}, #{appkey,jdbcType=VARCHAR}, #{hostSet,jdbcType=VARCHAR},
         #{host,jdbcType=VARCHAR}, #{filterId,jdbcType=INTEGER},
        #{exceptionName,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{duplicateCount,jdbcType=INTEGER})
        on duplicate key update `count` = `count` + VALUES(`count`), duplicate_count = duplicate_count + VALUES(duplicate_count)
    </insert>


    <insert id="batchInsert" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into error_log_statistic (time, appkey, host_set, host, filter_id, exception_name, `count`, duplicate_count)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.time},#{item.appkey},#{item.hostSet},#{item.host},#{item.filterId},#{item.exceptionName},#{item.count},#{item.duplicateCount})
        </foreach>
        on duplicate key update `count` = `count` + VALUES(`count`), duplicate_count = duplicate_count + VALUES(duplicate_count)
    </insert>

    <select id="groupByTime" resultMap="timeCountMap"
            parameterType="com.sankuai.msgp.errorlog.entity.ErrorLogStatisticQuery">
        SELECT time,sum(count) as count FROM error_log_statistic
        <where>
            1=1
            <if test="appkey !=null ">
                and appkey = #{appkey}
            </if>
            <if test="hostSet !=null and hostSet!='All'">
                and host_set = #{hostSet}
            </if>
            <if test="host !=null and host!='All'">
                and host = #{host}
            </if>
            <if test="filterId !=null and filterId>-1 ">
                and filter_id = #{filterId}
            </if>
            <if test="exceptionName !=null and  exceptionName !=''">
                and exception_name = #{exceptionName}
            </if>
            <if test="stime !=null ">
                and time &gt;= #{stime}
            </if>
            <if test="etime !=null ">
                and time &lt; #{etime}
            </if>
        </where>
        GROUP by time
    </select>

    <select id="getErrorCount" resultType="Integer">
        SELECT sum(count) FROM error_log_statistic
        <where>
            1=1
            <if test="appkey !=null ">
                and appkey = #{appkey}
            </if>
            <if test="host !=null and host!='All' ">
                and host = #{host}
            </if>
            <if test="filterId !=null and filterId>-1 ">
                and filter_id = #{filterId}
            </if>
            <if test="exceptionName !=null and  exceptionName !='' ">
                and exception_name = #{exceptionName}
            </if>
            <if test="time !=null ">
                and time = #{time}
            </if>
            <if test="stime !=null ">
                and time &gt;= #{stime}
            </if>
            <if test="etime !=null ">
                and time &lt; #{etime}
            </if>
        </where>
    </select>

</mapper>