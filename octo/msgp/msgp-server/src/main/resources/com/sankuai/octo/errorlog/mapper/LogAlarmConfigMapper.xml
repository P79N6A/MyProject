<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sankuai.octo.errorlog.dao.LogAlarmConfigDao">
    <resultMap id="BaseResultMap" type="com.sankuai.octo.errorlog.model.LogAlarmConfig">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="appkey" property="appkey" jdbcType="VARCHAR"/>
        <result column="alarm_virtual_node" property="alarmVirtualNode" jdbcType="VARCHAR"/>
        <result column="trapper" property="trapper" jdbcType="VARCHAR"/>
        <result column="gap_seconds" property="gapSeconds" jdbcType="INTEGER"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
    id, appkey, alarm_virtual_node, trapper, gap_seconds, enabled
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.sankuai.octo.errorlog.model.LogAlarmConfigExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from log_alarm_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <delete id="deleteByExample" parameterType="com.sankuai.octo.errorlog.model.LogAlarmConfigExample">
        delete from log_alarm_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <!-- add by yangguo03 -->
    <insert id="insertOrUpdateLogAlarmConfig" parameterType="com.sankuai.octo.errorlog.model.LogAlarmConfig">
        insert into log_alarm_config
        (appkey, alarm_virtual_node, trapper, gap_seconds, enabled)
        values (#{appkey},
        <choose>
            <when test="alarmVirtualNode !=null and alarmVirtualNode != ''">
               #{alarmVirtualNode},
            </when>
            <otherwise>
                #{appkey},
            </otherwise>
        </choose>
        #{trapper}, #{gapSeconds}, #{enabled})
        on duplicate key update
        <choose>
            <when test="alarmVirtualNode !=null and alarmVirtualNode != ''">
                alarm_virtual_node = #{alarmVirtualNode},
            </when>
            <otherwise>
                alarm_virtual_node = #{appkey},
            </otherwise>
        </choose>
        trapper = #{trapper},
        gap_seconds = #{gapSeconds},
        enabled = #{enabled};
    </insert>

    <!-- add by emma -->
    <update id="updateStartAlarmTask">
        update log_alarm_config set task_oper_type = "START" where  appkey = #{appkey, jdbcType=VARCHAR}
    </update>

    <!-- add by emma -->
    <update id="updateStopAlarmTask">
        update log_alarm_config set task_oper_type = "STOP" where  appkey = #{appkey, jdbcType=VARCHAR}
    </update>

    <!-- add by emma -->
    <update id="updateRestartAlarmTask">
        update log_alarm_config set task_oper_type = "RESTART" where  appkey = #{appkey, jdbcType=VARCHAR}
    </update>

</mapper>