<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sankuai.octo.msgp.dao.coverage.ServiceCoverageStatisticDao">
    <resultMap id="BaseResultMap" type="com.sankuai.octo.msgp.model.coverage.ServiceCoverageAppkey">
        <!--<id column="id" property="id" jdbcType="INTEGER"/>-->
        <result column="statdate" property="statdate" jdbcType="VARCHAR"/>
        <result column="base" property="base" jdbcType="INTEGER"/>
        <result column="owt" property="owt" jdbcType="VARCHAR"/>

        <result column="http" property="http" jdbcType="INTEGER"/>
        <result column="java" property="java" jdbcType="INTEGER"/>

        <result column="mtthrift" property="mtthrift" jdbcType="INTEGER"/>
        <result column="hlb" property="hlb" jdbcType="INTEGER"/>
        <result column="mns" property="mns" jdbcType="INTEGER"/>
        <result column="mcc" property="mcc" jdbcType="INTEGER"/>
        <result column="hulk" property="hulk" jdbcType="INTEGER"/>
        <result column="mtrace" property="mtrace" jdbcType="INTEGER"/>
        <result column="xmd_log" property="xmdlog" jdbcType="INTEGER"/>
        <result column="inf_bom" property="infbom" jdbcType="INTEGER"/>
        <result column="service_degrade" property="serviceDegrade" jdbcType="INTEGER"/>
        <result column="ptest" property="ptest" jdbcType="INTEGER"/>

        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="genOneDayStatisticData">
        <![CDATA[
        INSERT INTO service_coverage_statistic(
                    statdate, owt, base, http, java, mtthrift, hlb, mns,
                    mcc, hulk, mtrace, xmd_log, inf_bom,
                    service_degrade, ptest, create_time)
             SELECT statdate, owt, base, sum(http) http, sum(java) java, sum(mtthrift) mtthrift, sum(hlb) hlb, sum(mns) mns,
                    sum(mcc) mcc, sum(hulk) hulk, sum(mtrace) mtrace, sum(xmd_log) xmd_log, sum(inf_bom) inf_bom,
                    sum(service_degrade) service_degrade, sum(ptest) ptest, now()
                FROM service_coverage_appkey WHERE `statdate` = #{date, jdbcType=VARCHAR} AND (java <> 0 OR http <> 0)  GROUP BY statdate, owt, base
        ]]>
    </insert>

    <delete id="deleteOneDaySvcCoverageData">
         DELETE FROM service_coverage_statistic WHERE `statdate` = #{date, jdbcType=VARCHAR}
    </delete>


    <select id="countOneDaySvcCoverageData" resultType="java.lang.Integer">
        SELECT count(*) FROM service_coverage_statistic WHERE `statdate` = #{date, jdbcType=VARCHAR}
    </select>

    <select id="getOutlineDatesListBgIsAll" resultType="com.sankuai.octo.msgp.domain.coverage.ServiceCoverageOutlineDay"
            statementType="STATEMENT">
        SELECT statdate,sum(http) AS httpCount, sum(java) AS javaCount, sum(${cmptVal}) AS componentCount FROM service_coverage_statistic WHERE statdate &gt;= "${startTime}" AND statdate &lt;= "${endTime}" AND base=${baseInt} GROUP BY statdate ORDER BY statdate
    </select>

    <select id="getOutlineDatesList" resultType="com.sankuai.octo.msgp.domain.coverage.ServiceCoverageOutlineDay"
            statementType="STATEMENT">
        SELECT statdate,http AS httpCount,java AS javaCount,${cmptVal} AS componentCount FROM service_coverage_statistic where statdate &gt;= "${startTime}" and statdate &lt;= "${endTime}" and base=${baseInt} and owt="${owt}" order by statdate ASC
    </select>

    <select id="getOutlineDatesListOwtIsAll" resultType="com.sankuai.octo.msgp.domain.coverage.ServiceCoverageOutlineDay"
            statementType="STATEMENT">
        SELECT statdate,SUM(http) AS httpCount,SUM(java) AS javaCount,SUM(${cmptVal}) AS componentCount FROM
        service_coverage_statistic
        where statdate &gt;= "${startTime}" and statdate &lt;= "${endTime}" and base=${baseInt} and owt in
        <foreach collection="owtlist" index="index" item="owt" open="(" separator="," close=")">
            "${owt}"
        </foreach>
        GROUP BY statdate ORDER BY statdate;
    </select>

</mapper>