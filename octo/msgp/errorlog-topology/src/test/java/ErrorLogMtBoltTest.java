import com.sankuai.logparser.bolt.ErrorLogMtBolt;
import com.sankuai.msgp.common.utils.JsonUtil;
import com.sankuai.msgp.common.model.errorlog.ParsedLog;
import com.sankuai.msgp.common.utils.DateTimeUtil;
import org.junit.Assert;
import org.junit.Test;

import java.util.Date;
import java.util.Map;

/**
 * Created by emma on 2017/8/12.
 */
public class ErrorLogMtBoltTest {

    @Test
    public void testParsedLog() {
        ErrorLogMtBolt bolt = new ErrorLogMtBolt();
        String jsonLog = "{\"message\":\"saveServiceProviderNode  fail\\njava.sql.BatchUpdateException: Data truncation: Data too long for column 'version' at row 1\\n\\tat sun.reflect.GeneratedConstructorAccessor79.newInstance(Unknown Source) ~[?:?]\\n\\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_60]\\n\\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[?:1.8.0_60]\\n\\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:404) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.Util.getInstance(Util.java:387) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.SQLError.createBatchUpdateException(SQLError.java:1161) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1773) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchInternal(PreparedStatement.java:1257) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.StatementImpl.executeBatch(StatementImpl.java:958) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:1723) ~[c3p0-0.9.1.1.jar:0.9.1.1]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1$$anonfun$apply$2.apply(JdbcInsertInvokerComponent.scala:199) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1$$anonfun$apply$2.apply(JdbcInsertInvokerComponent.scala:193) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$SessionDef$class.withPreparedStatement(JdbcBackend.scala:191) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:389) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.preparedInsert(JdbcInsertInvokerComponent.scala:170) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1.apply(JdbcInsertInvokerComponent.scala:193) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.internalInsertAll(JdbcInsertInvokerComponent.scala:191) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.insertAll(JdbcInsertInvokerComponent.scala:187) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$InsertInvokerDef$class.$plus$plus$eq(JdbcInsertInvokerComponent.scala:71) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.$plus$plus$eq(JdbcInsertInvokerComponent.scala:145) ~[slick_2.10-2.1.0.jar:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$$anonfun$batchInsert$1.apply(AppkeyProviderDao.scala:94) ~[classes/:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$$anonfun$batchInsert$1.apply(AppkeyProviderDao.scala:69) ~[classes/:?]\\n\\tat scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46) ~[slick_2.10-2.1.0.jar:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$.batchInsert(AppkeyProviderDao.scala:68) ~[classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$.com$sankuai$octo$msgp$serivce$service$AppkeyDescService$$saveServiceProviderNode(AppkeyDescService.scala:103) [classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$$anonfun$saveServiceProvider$1.apply(AppkeyDescService.scala:59) [classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$$anonfun$saveServiceProvider$1.apply(AppkeyDescService.scala:54) [classes/:?]\\n\\tat scala.collection.Iterator$class.foreach(Iterator.scala:727) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1157) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:975) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply$mcV$sp(Tasks.scala:54) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:53) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:53) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$class.tryLeaf(Tasks.scala:56) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:972) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class.internal(Tasks.scala:183) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.internal(Tasks.scala:514) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class.compute(Tasks.scala:162) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:514) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.RecursiveAction.exec(RecursiveAction.java:160) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library-2.10.4.jar:?]\\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'version' at row 1\\n\\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3964) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3902) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2526) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2673) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2073) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1751) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\t... 39 more\\n\",\"exceptionName\":\"java.sql.BatchUpdateException\",\"_mt_servername\":\"set-yf-inf-msgp01.yf.sankuai.com\",\"_mt_appkey\":\"com.sankuai.inf.msgp\",\"_mt_datetime\":\"%s\",\"_mt_millisecond\":\"020\",\"_mt_level\":\"ERROR\",\"_mt_logger_name\":\"com.sankuai.octo.msgp.serivce.service.AppkeyDescService$\",\"_mt_thread\":\"ForkJoinPool-5-worker-1\"}\n";
        String time = DateTimeUtil.format(new Date(), DateTimeUtil.DATE_TIME_FORMAT);
        jsonLog = String.format(jsonLog, time);
        Map<String, Object> logMap = (Map<String, Object>) JsonUtil.toMap(jsonLog);
        ParsedLog logRecord = bolt.transfer(logMap);
        Assert.assertNotNull(logRecord);
        String parsedJsonLog = JsonUtil.toString(logRecord);
        System.out.println("hoho " + parsedJsonLog);
    }

    @Test
    public void testTimeFilterLog() {
        ErrorLogMtBolt bolt = new ErrorLogMtBolt();
        String jsonLog = "{\"message\":\"saveServiceProviderNode  fail\\njava.sql.BatchUpdateException: Data truncation: Data too long for column 'version' at row 1\\n\\tat sun.reflect.GeneratedConstructorAccessor79.newInstance(Unknown Source) ~[?:?]\\n\\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_60]\\n\\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422) ~[?:1.8.0_60]\\n\\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:404) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.Util.getInstance(Util.java:387) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.SQLError.createBatchUpdateException(SQLError.java:1161) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1773) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchInternal(PreparedStatement.java:1257) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.StatementImpl.executeBatch(StatementImpl.java:958) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:1723) ~[c3p0-0.9.1.1.jar:0.9.1.1]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1$$anonfun$apply$2.apply(JdbcInsertInvokerComponent.scala:199) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1$$anonfun$apply$2.apply(JdbcInsertInvokerComponent.scala:193) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$SessionDef$class.withPreparedStatement(JdbcBackend.scala:191) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:389) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.preparedInsert(JdbcInsertInvokerComponent.scala:170) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1.apply(JdbcInsertInvokerComponent.scala:193) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:426) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.internalInsertAll(JdbcInsertInvokerComponent.scala:191) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.insertAll(JdbcInsertInvokerComponent.scala:187) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$InsertInvokerDef$class.$plus$plus$eq(JdbcInsertInvokerComponent.scala:71) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.driver.JdbcInsertInvokerComponent$BaseInsertInvoker.$plus$plus$eq(JdbcInsertInvokerComponent.scala:145) ~[slick_2.10-2.1.0.jar:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$$anonfun$batchInsert$1.apply(AppkeyProviderDao.scala:94) ~[classes/:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$$anonfun$batchInsert$1.apply(AppkeyProviderDao.scala:69) ~[classes/:?]\\n\\tat scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:34) ~[slick_2.10-2.1.0.jar:?]\\n\\tat scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$3.withSession(JdbcBackend.scala:46) ~[slick_2.10-2.1.0.jar:?]\\n\\tat com.sankuai.octo.msgp.dao.appkey.AppkeyProviderDao$.batchInsert(AppkeyProviderDao.scala:68) ~[classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$.com$sankuai$octo$msgp$serivce$service$AppkeyDescService$$saveServiceProviderNode(AppkeyDescService.scala:103) [classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$$anonfun$saveServiceProvider$1.apply(AppkeyDescService.scala:59) [classes/:?]\\n\\tat com.sankuai.octo.msgp.serivce.service.AppkeyDescService$$anonfun$saveServiceProvider$1.apply(AppkeyDescService.scala:54) [classes/:?]\\n\\tat scala.collection.Iterator$class.foreach(Iterator.scala:727) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1157) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.ParIterableLike$Foreach.leaf(ParIterableLike.scala:975) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply$mcV$sp(Tasks.scala:54) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:53) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$$anonfun$tryLeaf$1.apply(Tasks.scala:53) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.Task$class.tryLeaf(Tasks.scala:56) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.ParIterableLike$Foreach.tryLeaf(ParIterableLike.scala:972) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class.internal(Tasks.scala:183) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.internal(Tasks.scala:514) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingTasks$WrappedTask$class.compute(Tasks.scala:162) [scala-library-2.10.4.jar:?]\\n\\tat scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$WrappedTask.compute(Tasks.scala:514) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.RecursiveAction.exec(RecursiveAction.java:160) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [scala-library-2.10.4.jar:?]\\n\\tat scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [scala-library-2.10.4.jar:?]\\nCaused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'version' at row 1\\n\\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3964) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3902) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2526) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2673) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2073) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\tat com.mysql.jdbc.PreparedStatement.executeBatchSerially(PreparedStatement.java:1751) ~[mysql-connector-java-5.1.39.jar:5.1.39]\\n\\t... 39 more\\n\",\"exceptionName\":\"java.sql.BatchUpdateException\",\"_mt_servername\":\"set-yf-inf-msgp01.yf.sankuai.com\",\"_mt_appkey\":\"com.sankuai.inf.msgp\",\"_mt_datetime\":\"2017-08-12 23:08:35\",\"_mt_millisecond\":\"020\",\"_mt_level\":\"ERROR\",\"_mt_logger_name\":\"com.sankuai.octo.msgp.serivce.service.AppkeyDescService$\",\"_mt_thread\":\"ForkJoinPool-5-worker-1\"}\n";
        Map<String, Object> logMap = (Map<String, Object>) JsonUtil.toMap(jsonLog);
        ParsedLog logRecord = bolt.transfer(logMap);
        Assert.assertNull(logRecord);
    }
}